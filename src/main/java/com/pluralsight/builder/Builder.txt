Concepts
########
- Handles complex constructors
- Large number of parameters
- Immutability(enforces immutability which you can't achieve with setters)
Examples: StringBuilder, DocumentBuilder, Locale.Builder

-Flexibility over telescoping constructors
-Static inner class
-Calls appropriate constructor
-Negates the need for exposed setters

Pitfalls:
- Objects created with this pattern are meant to be Immutable
- static Inner class
- Unlike prototype pattern, it isn't usually refactored in(Design first)
- Complexity

Builder Vs Prototype
####################

Builder
#######
-Handles complex constructors
-No interface required
-Can be a separate class
 -So Works with legacy code

Prototype
#########
-Implemented around a clone
-Avoids calling complex constructor
-Difficult to implement in legacy code(since clone method works around data members & constructors)
